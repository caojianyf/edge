From 728dd1988517b76ecb0a5aee5bdfcf4f12eb6766 Mon Sep 17 00:00:00 2001
From: "addy.ke" <addy.ke@rock-chips.com>
Date: Fri, 7 Apr 2023 18:05:03 +0800
Subject: [PATCH 28/31] clk: rockchip: change for guest passthrough

Signed-off-by: addy.ke <addy.ke@rock-chips.com>
Change-Id: I8996942a9684c94f390af2b9ac7f6d16c639737d
---
 drivers/clk/rockchip/Kconfig              |  7 +++++
 drivers/clk/rockchip/clk-rk3588.c         |  4 +++
 drivers/clk/rockchip/clk.c                | 37 +++++++++++++++++++++++
 drivers/clk/rockchip/clk.h                |  4 +++
 drivers/phy/rockchip/phy-rockchip-usbdp.c |  2 ++
 5 files changed, 54 insertions(+)

diff --git a/drivers/clk/rockchip/Kconfig b/drivers/clk/rockchip/Kconfig
index 3a1840f5f0e2..f92ce8b4c030 100644
--- a/drivers/clk/rockchip/Kconfig
+++ b/drivers/clk/rockchip/Kconfig
@@ -207,6 +207,13 @@ config ROCKCHIP_PLL_RK3588
 	help
 	  Say y here to enable pll type is rk3588.
 
+config POCKCHIP_CLK_PASS
+	bool "Rockchip Clk Passthrough"
+	depends on VIRTIO
+	default n
+	help
+	  Say y here to enable passthrough clk for hypervisor
+
 source "drivers/clk/rockchip/regmap/Kconfig"
 
 endif
diff --git a/drivers/clk/rockchip/clk-rk3588.c b/drivers/clk/rockchip/clk-rk3588.c
index 28c23e962c57..8eea2d1e6b9e 100644
--- a/drivers/clk/rockchip/clk-rk3588.c
+++ b/drivers/clk/rockchip/clk-rk3588.c
@@ -2472,6 +2472,10 @@ static void __init rk3588_clk_init(struct device_node *np)
 
 	rockchip_clk_of_add_provider(np, ctx);
 
+#ifdef CONFIG_ROCKCHIP_CLK_PASS
+	rockchip_clk_protect_init(np);
+#endif
+
 	if (!rk_dump_cru)
 		rk_dump_cru = rk3588_dump_cru;
 }
diff --git a/drivers/clk/rockchip/clk.c b/drivers/clk/rockchip/clk.c
index 3cea6b7eb306..5cd332c9e7c3 100644
--- a/drivers/clk/rockchip/clk.c
+++ b/drivers/clk/rockchip/clk.c
@@ -659,6 +659,43 @@ EXPORT_SYMBOL_GPL(rockchip_clk_register_armclk);
 void (*rk_dump_cru)(void);
 EXPORT_SYMBOL(rk_dump_cru);
 
+#ifdef CONFIG_ROCKCHIP_CLK_PASS
+void rockchip_clk_protect_init(struct device_node *np)
+{
+	struct of_phandle_args clkspec;
+	struct clk *clk;
+	int ret, index, cnt;
+
+	cnt = of_count_phandle_with_args(np, "rockchip,clock-protect",
+			"#clock-cells");
+		if (cnt == -EINVAL)
+			pr_err("clk: invalid value of clock-protect property at %pOF\n",
+				np);
+		for (index = 0; index < cnt; index++) {
+			ret = of_parse_phandle_with_args(np, "rockchip,clock-protect",
+				"#clock-cells", index, &clkspec);
+		if (ret < 0) {
+			/* skip empty (null) phandles */
+			if (ret == -ENOENT)
+				continue;
+			else
+				return;
+		}
+		clk = of_clk_get_from_provider(&clkspec);
+		if (IS_ERR(clk)) {
+			pr_err("clk: couldn't get clock %d for %pOF\n",
+					index, np);
+			continue;
+		}
+
+		clk_prepare_enable(clk);
+		clk_rate_exclusive_get(clk);
+		clk_rate_exclusive_get(clk);
+	}
+}
+EXPORT_SYMBOL_GPL(rockchip_clk_protect_init);
+#endif
+
 static int rk_clk_panic(struct notifier_block *this,
 			unsigned long ev, void *ptr)
 {
diff --git a/drivers/clk/rockchip/clk.h b/drivers/clk/rockchip/clk.h
index bef79f659dd7..2d9c382da198 100644
--- a/drivers/clk/rockchip/clk.h
+++ b/drivers/clk/rockchip/clk.h
@@ -1294,4 +1294,8 @@ static inline void rockchip_register_softrst(struct device_node *np,
 #endif
 extern void (*rk_dump_cru)(void);
 
+#ifdef CONFIG_ROCKCHIP_CLK_PASS
+void rockchip_clk_protect_init(struct device_node *np);
+#endif
+
 #endif
diff --git a/drivers/phy/rockchip/phy-rockchip-usbdp.c b/drivers/phy/rockchip/phy-rockchip-usbdp.c
index f1a5169e16d3..0d22abb6cd39 100644
--- a/drivers/phy/rockchip/phy-rockchip-usbdp.c
+++ b/drivers/phy/rockchip/phy-rockchip-usbdp.c
@@ -1299,6 +1299,7 @@ static int rk3588_udphy_refclk_set(struct rockchip_udphy *udphy)
 	rate = clk_get_rate(udphy->refclk);
 	dev_dbg(udphy->dev, "refclk freq %ld\n", rate);
 
+#ifndef CONFIG_ROCKCHIP_CLK_PASS
 	switch (rate) {
 	case 24000000:
 		ret = regmap_multi_reg_write(udphy->pma_regmap, rk3588_udphy_24m_refclk_cfg,
@@ -1317,6 +1318,7 @@ static int rk3588_udphy_refclk_set(struct rockchip_udphy *udphy)
 		dev_err(udphy->dev, "unsupported refclk freq %ld\n", rate);
 		return -EINVAL;
 	}
+#endif
 
 	return 0;
 }
-- 
2.25.1

